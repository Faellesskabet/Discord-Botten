@using Dikubot.DataLayer.Logic.WebDiscordBridge
@using Dikubot.Discord
@using global::Discord.WebSocket
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Mvc
@inject NavigationManager NavigationManager



<BFUTheme>
    <BFULayerHost Style="width:100vw">
        @if (IsSubdomainValid())
        {
            <CascadingAuthenticationState>
                <Router AppAssembly="@typeof(Startup).Assembly" PreferExactMatches="@true">
                    <Found Context="routeData">
                        <AuthorizeView>
                            <Authorized>
                                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/>
                            </Authorized>
                            <NotAuthorized>
                                <Login AuthCode="@AuthCode"/>
                            </NotAuthorized>
                        </AuthorizeView>
                    </Found>
                    <NotFound>
                        <RedirectToBase/>
                    </NotFound>
                </Router>
            </CascadingAuthenticationState>   
        }
        else
        {
            <h1>Denne hjemmeside findes ikke</h1>
        }
    </BFULayerHost>
</BFUTheme>

@code {
    [Parameter]
    public string AuthCode { get; set; }
    public bool IsSubdomainValid()
    {
        SocketGuild guild = SubDomainConnector.GetGuildFromDomain(NavigationManager.Uri);
        return guild != null;
    }

}