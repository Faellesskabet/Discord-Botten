@page "/"
@using Dikubot.Webapp.Authentication
@using global::Discord.WebSocket
@using Dikubot.DataLayer.Database.Global.GuildSettings
@using Dikubot.DataLayer.Database.Guild.Models.Calendar.Equipment
@using Dikubot.Discord
@using Dikubot.Webapp.Extensions.Dashboard;

@inject AuthenticationStateProvider AuthenticationStateProvider

    <MudAlert Severity="Severity.Warning" Square="true" Class="my-2">Dette er en åben beta af KULiv.dk. Hvis du finder en fejl, 
        må du meget gerne rappotere det her: https://github.com/Faellesskabet/</MudAlert>

<Dashboard PanelServices="_panelServices"></Dashboard>



@code {
    private Authenticator authenticator;
    private UserIdentity user;
    private SocketGuild guild;
    private GuildSettingsModel _guildSettingsModel;
    private bool _loaded = false;
    private DashboardPanelServices _panelServices;
    
    protected override async Task OnInitializedAsync()
    {
        authenticator = ((Authenticator) AuthenticationStateProvider);
        var authState = await authenticator.GetAuthenticationStateAsync();
        user = (UserIdentity) authState.User.Identity;
        if (user == null)
        {
            return;
        }
        guild = DiscordBot.Client.GetGuild(user.UserGlobalModel.SelectedGuild);
        _guildSettingsModel = new GuildSettingsService().Get(guild) ?? new GuildSettingsModel(guild);
        _loaded = true;
        _panelServices = new DashboardPanelServices(guild);

    }
}