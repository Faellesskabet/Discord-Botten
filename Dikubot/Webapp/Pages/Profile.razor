@page "/profile"
@using System.Security.Claims
@using Dikubot.Webapp.Authentication
@inject AuthenticationStateProvider AuthenticationStateProvider


<h3>Profile</h3>
<p>Her kan du rette din data. Kommer snart!</p>
<h3>ClaimsPrincipal Data</h3>

<button @onclick="GetClaimsPrincipalData">Get ClaimsPrincipal Data</button>

<p>@_authMessage</p>

@if (_claims.Count() > 0)
{
    <ul>
        @foreach (var claim in _claims)
        {
            <li>@claim.Type: @claim.Value</li>
        }
    </ul>
}

@code {
    private string _authMessage;
    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();

    private async Task GetClaimsPrincipalData()
    {
        var authState = await ((Authenticator) AuthenticationStateProvider).GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            _authMessage = $"{user.Identity.Name} is authenticated.";
            _claims = user.Claims;
        }
        else
        {
            _authMessage = "The user is NOT authenticated.";
        }
    }

}