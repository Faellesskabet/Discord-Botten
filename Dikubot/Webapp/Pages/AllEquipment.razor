@page "/all/equipment"
@using global::Discord.WebSocket
@using Dikubot.Webapp.Authentication
@using Dikubot.Webapp.Authentication.Identities

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject DiscordSocketClient DiscordSocketClient

<h3>Equipment</h3>
@foreach (SocketGuild item in guilds)
{
    <EquipmentWidget GuildId="@item.Id"> </EquipmentWidget>
}
;


@code{
    private DiscordIdentity _discord;
    private Authenticator authenticator;

    private IReadOnlyCollection<SocketGuild> guilds;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        authenticator = (Authenticator)AuthenticationStateProvider;
        AuthenticationState authState = await authenticator.GetAuthenticationStateAsync();
        _discord = (DiscordIdentity)authState.User.Identity;
        if (_discord == null)
        {
            return;
        }
        guilds = DiscordSocketClient.GetUser(_discord.DiscordIdLong)?.MutualGuilds ?? new List<SocketGuild>();
    }

}