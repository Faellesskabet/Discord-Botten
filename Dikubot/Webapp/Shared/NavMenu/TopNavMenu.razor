@namespace Dikubot.Webapp.Extensions.NavMenu
@using Dikubot.Webapp.Authentication
@using Dikubot.Discord
@using global::Discord.WebSocket
@using Dikubot.DataLayer.Database.Global.GuildSettings
@using Dikubot.DataLayer.Database.Global.User
@using Dikubot.Webapp.Pages
@using MudBlazor.Utilities
@using Data
@using Dikubot.Extensions.EmojiSelector
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NotifyStateService _notifyStateService;
@inject UserService _user



<MudAppBar Elevation="1" Style="background-color: #231b2f">
    <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer"/>
        <MudSpacer/>
    </MudHidden>
    <MudButton Variant="Variant.Text"
               Href="/"> <MudText Typo="Typo.h5" Color="Color.Primary"> kuliv.dk</MudText></MudButton>
    
    <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
        <MudButton Variant="Variant.Text"
                   Href="/discovery/unions">
            <Localization>
                <Danish>
                    Foreninger
                </Danish>
                <English>
                    Associations
                </English>
            </Localization>
        </MudButton>
        <MudButton Variant="Variant.Text"
                   Href="/discovery/events">Events</MudButton>
        <MudButton Variant="Variant.Text"
                   Href="/discovery/calendar">
            <Localization>
                <Danish>Kalender</Danish>
                <English>Calendar</English>
            </Localization>
        </MudButton>
    </MudHidden>
    <MudSpacer/>
    <MudButton Variant="Variant.Text"
               Href="/connect">
        <Localization>
            <Danish>Login</Danish>
            <English>Login</English>
        </Localization>
    </MudButton>
    
    <Localization>
        <Danish>
            <MudIconButton Size="Size.Large" Icon="@Twemoji.E1f1e9_1f1f0" OnClick="() => new ChangeLocalization(_user, _notifyStateService).Change(ChangeLocalization.Language.English)"/>
            </Danish>
        <English>
            <MudIconButton Size="Size.Large" Icon="@Twemoji.E1f1ec_1f1e7" OnClick="() => new ChangeLocalization(_user, _notifyStateService).Change(ChangeLocalization.Language.Danish)"/>
            </English>
    </Localization>
    <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/Faellesskabet/Discord-Botten" Target="_blank"/>

</MudAppBar>
       <MudDrawer @bind-Open="@open" Elevation="1" Variant="@DrawerVariant.Temporary" Style="@($"background-color: {NavColor}; color: {NavTextColor};")">
           <MudDrawerHeader>
               <MudText Typo="Typo.h6">kuLiv.dk</MudText>
           </MudDrawerHeader>
           <MudNavMenu>
               <MudNavLink Match="NavLinkMatch.All" Href="/discovery/unions">Foreninger</MudNavLink>
               <MudNavLink Match="NavLinkMatch.All" Href="/discovery/events">Events</MudNavLink>
               <MudNavLink Match="NavLinkMatch.All" Href="/discovery/calendar">Kalender</MudNavLink>
                <MudNavLink Match="NavLinkMatch.All" Href="/connect">Login</MudNavLink>
           </MudNavMenu>
       </MudDrawer>


@code {
    
    
    
    
    bool open = false;
    private string NavColor = "";
    private string NavTextColor = "";

    protected override async Task OnInitializedAsync()
    {
        NavColor = GetColor().Value;
        NavTextColor = GetTextColor().Value;
    }

    void ToggleDrawer()
    {
        open = !open;
    }
    
    private MudColor GetColor()
    {
        return App.ThemeProvider.IsDarkMode ? App.ThemeProvider.Theme.PaletteDark.Background : App.ThemeProvider.Theme.Palette.Background;
    }

    private MudColor GetTextColor()
    {
        return App.ThemeProvider.IsDarkMode ? App.ThemeProvider.Theme.PaletteDark.TextPrimary : App.ThemeProvider.Theme.Palette.TextPrimary;
    }

}