@namespace Dikubot.Webapp.Extensions.NavMenu
@using Dikubot.Webapp.Authentication
@using Dikubot.Discord
@using global::Discord.WebSocket
@using Dikubot.DataLayer.Database.Global.GuildSettings
@using Dikubot.DataLayer.Database.Global.User
@using Dikubot.Webapp.Pages
@using MudBlazor.Utilities
@using Data
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NotifyStateService _notifyStateService;

@if (_isSmall)
{
    <MudAppBar Elevation="1" Style="background-color: #231b2f">
        <MudButton Variant="Variant.Text"
                   Href="/"> <MudText Typo="Typo.h5" Color="Color.Primary"> kuliv.dk</MudText></MudButton>
        <MudButton Variant="Variant.Text"
                   Href="/discovery/unions">Foreninger</MudButton>
        <MudButton Variant="Variant.Text"
                   Href="/discovery/events">Kalender</MudButton>
        <MudSpacer/>
        <MudButton Variant="Variant.Text"
                   Href="/connect">Login</MudButton>
   
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/Faellesskabet/Discord-Botten" Target="_blank"/>
    </MudAppBar>
}

<MudHidden Breakpoint="Breakpoint.Xs" @bind-IsHidden="@_isSmall" Invert="true">
   <MudAppBar Elevation="1" Style="background-color: #231b2f">
           <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
           <MudSpacer />
           <MudButton Variant="Variant.Text"
                      Href="/"> <MudText Typo="Typo.h5" Color="Color.Primary"> kuliv.dk</MudText></MudButton>
           <MudSpacer />
     <MudButton Variant="Variant.Text"
                           Href="/connect">Login</MudButton>
        
           <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/Faellesskabet/Discord-Botten" Target="_blank"/>
           </MudAppBar>
       <MudDrawer @bind-Open="@open" Elevation="1" Variant="@DrawerVariant.Temporary" Style="@($"background-color: {NavColor}; color: {NavTextColor};")">
           <MudDrawerHeader>
               <MudText Typo="Typo.h6">KULiv.dk</MudText>
           </MudDrawerHeader>
           <MudNavMenu>
               <MudNavLink Match="NavLinkMatch.All" Href="/discovery/unions">Foreninger</MudNavLink>
               <MudNavLink Match="NavLinkMatch.All" Href="/discovery/events">Kalender</MudNavLink>
           </MudNavMenu>
       </MudDrawer>
</MudHidden>

@code {

    bool _isSmall = true;
    bool open = false;
    private string NavColor = "";
    private string NavTextColor = "";

    protected override async Task OnInitializedAsync()
    {
        NavColor = GetColor().Value;
        NavTextColor = GetTextColor().Value;
    }

    void ToggleDrawer()
    {
        open = !open;
    }
    
    private MudColor GetColor()
    {
        return App.ThemeProvider.IsDarkMode ? App.ThemeProvider.Theme.PaletteDark.Background : App.ThemeProvider.Theme.Palette.Background;
    }

    private MudColor GetTextColor()
    {
        return App.ThemeProvider.IsDarkMode ? App.ThemeProvider.Theme.PaletteDark.TextPrimary : App.ThemeProvider.Theme.Palette.TextPrimary;
    }

}