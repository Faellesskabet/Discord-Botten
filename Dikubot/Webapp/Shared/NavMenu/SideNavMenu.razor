@namespace Dikubot.Webapp.Extensions.NavMenu
@using Dikubot.Webapp.Authentication
@using Dikubot.Discord
@using global::Discord.WebSocket
@using Dikubot.DataLayer.Database.Global.GuildSettings
@using Dikubot.DataLayer.Database.Global.User
@using Dikubot.Webapp.Pages
@using MudBlazor.Utilities
@using Data
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NotifyStateService _notifyStateService;

<MudSelect T="ulong" Label="Fællesskab" Value="@_guildId" Variant="Variant.Outlined" ValueChanged="ChangeGuild" AdornmentIcon="@Icons.Filled.People" AdornmentColor="Color.Primary"
           Text="@(_guilds.FirstOrDefault(model => model.GuildId == User.UserGlobalModel.SelectedGuild)?.Name ?? "Vælg fællesskab")">
    @foreach (var guild in _guilds)
    {
        <MudSelectItem Value="@guild.GuildId">@guild.Name</MudSelectItem>
    }
</MudSelect>

<MudNavGroup Expanded="true" Title="Serveren">
    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Home" Href="/">
        <Localization>
            <Danish>Forside</Danish>
            <English>Homepage</English>
        </Localization>
    </MudNavLink>
    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Newspaper" Href="/news">
        <Localization>
            <Danish>Nyheder</Danish>
            <English>News</English>
        </Localization>
    </MudNavLink>
    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Person" Href="/roles">
        <Localization>
            <Danish>Tilmeld roller</Danish>
            <English>Register roles</English>
        </Localization>
        
    </MudNavLink>
</MudNavGroup>
<MudNavGroup Expanded="true" Title="Discovery">
    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.People" Href="/discovery/unions">
        <Localization>
            <Danish>Foreninger</Danish>
            <English>Associations</English>
        </Localization>
    </MudNavLink>
    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Event" Href="/discovery/events">
        <Localization>
            <Danish>
                Begivenheder
            </Danish>
            <English>
                Events
            </English>
        </Localization>
    </MudNavLink>
    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.CalendarMonth" Href="/discovery/calendar">
        <Localization>
            <Danish>Kalender</Danish>
            <English>Calendar</English>
        </Localization>
    </MudNavLink>
    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.CalendarMonth" Href="/equipment">
        <Localization>
            <Danish> Udstyrliste <MudChip Size="Size.Small" Color="Color.Info"> beta</MudChip> </Danish>
            <English> Equipments <MudChip Size="Size.Small" Color="Color.Info"> beta</MudChip></English>
        </Localization>
    </MudNavLink>
</MudNavGroup>

<MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.DomainAdd" Href="/addguild">
    <Localization>
        <Danish>Tilføj dit eget fællesskab</Danish>
        <English>Add your own community</English>
    </Localization>
</MudNavLink>
<MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.SportsKabaddi" Href="/volunteer">
    <Localization>
        <Danish>Bliv frivillig</Danish>
        <English>Become a volunteer </English>
    </Localization>
</MudNavLink>
<MudNavGroup Title="Settings" Icon="@Icons.Filled.Settings">
    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Person" Href="/profile">Min Profil</MudNavLink>
    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Help" Href="/help">Få hjælp</MudNavLink>
    
    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Logout" Href="/logout">Log-ud</MudNavLink>
</MudNavGroup>
@if (User.HasClaim(m => m.Value == Permissions.GuildAdmin || m.Value == Permissions.GlobalAdmin)  )
{<MudDivider Class="my-2"/>
    <MudNavGroup Title="Admin" Icon="@Icons.Filled.Settings">
        @if (User.HasClaim(m => m.Value == Permissions.GlobalAdmin))
        {
            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.CrueltyFree" IconColor="Color.Primary" Href="/op">System Admin indstillinger</MudNavLink>
            
        }
        @if (User.HasClaim(m => m.Value == Permissions.GuildAdmin))
        {
            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Computer" Href="/admin">Admin indstillinger</MudNavLink>
        }
    </MudNavGroup>
}


@code
{
    [Parameter] public UserIdentity User { get; set; }
    [Inject] private IDialogService DialogService { get; set; }
    private List<GuildSettingsModel> _guilds;
    private ulong _guildId;
    
    [Parameter]
    public EventCallback OnUpdate { get; set; }

    protected override void OnInitialized()
    {
        
        GuildSettingsService guildSettingsService = new GuildSettingsService();
        
        _guilds = new List<GuildSettingsModel>();
        _guildId = User.UserGlobalModel.SelectedGuild;
        
        foreach (var guild in User.GetJoinedGuilds())
        {
            _guilds.Add(guildSettingsService.Get(guild));
        }

        GuildSettingsModel ShowMore = new GuildSettingsModel(){Name = "Show More", Id = Guid.Empty};
        _guilds.Add(ShowMore);
        base.OnInitialized();
        
    }

    public async Task ChangeGuild(ulong guildId)
    {
        _guildId = guildId;
        var authenticator = ((Authenticator) AuthenticationStateProvider);
        var authState = await authenticator.GetAuthenticationStateAsync();
        
        if (User == null)
        {
            await DialogService.ShowMessageBox( "Fejl ???", "Der er sket en fejl. Prøv at clear dine cookies og refresh");
            return;
        }

        if (_guildId == User.UserGlobalModel.SelectedGuild)
        {
            return;
        }

        User.UserGlobalModel.SelectedGuild = _guildId;
        new UserGlobalServices().Upsert(User.UserGlobalModel);
        await authenticator.UpdateSession();
        
        this.StateHasChanged();
        _notifyStateService.NotifyUserChange(this);
    }
}
