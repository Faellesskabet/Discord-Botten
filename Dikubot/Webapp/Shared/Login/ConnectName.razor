@using Dikubot.Discord
@using Dikubot.Webapp.Authentication
@using global::Discord.WebSocket
@using Dikubot.DataLayer.Database.Global.Session
@using Dikubot.DataLayer.Database.Global.User
@using Dikubot.DataLayer.Static
@inject AuthenticationStateProvider AuthenticationStateProvider

<link href="css/diku/login.css" rel="stylesheet"/>
<h1>Velkommen til KU-Liv</h1>
<div class="card w-auto h-auto shadow">
    <div class="card-body">
        <h5 class="card-title">Hvad er dit fulde navn?</h5>
        <div class="textFieldDiv">
            <MudTextField Placeholder="Fulde navn"
                          Style="padding-bottom: 5px"
                          @bind-Value="name" Immediate="true" Autofocus="true"/>
            <MudButton OnClick="@ConfirmName">Bekr√¶ft Navn</MudButton>
        </div>

    </div>
</div>


@code {

    [Parameter]
    public Login parent { get; set; }

    private Authenticator authenticator;
    private UserIdentity user;
    private string name = "";

    protected override async Task OnInitializedAsync()
    {
        authenticator = ((Authenticator) AuthenticationStateProvider);
        var authState = await authenticator.GetAuthenticationStateAsync();
        user = (UserIdentity) authState.User.Identity;
    }

    private async void ConfirmName()
    {
        SocketGuild guild = authenticator.GetGuild();
        IReadOnlyCollection<SocketGuild> mutualGuilds = DiscordBot.Client.GetUser(user.UserGlobalModel.DiscordIdLong).MutualGuilds;
        user.UserGlobalModel.Name = name;
        new UserGlobalServices().Upsert(user.UserGlobalModel);
        Util.UpdateUserNameOnAllForcedGuilds(DiscordBot.Client.GetUser(user.UserGlobalModel.DiscordIdLong));
        SessionModel sessionModel = new SessionModel(user.UserGlobalModel);
        await authenticator.UpdateSession(sessionModel);
        parent.Update();
    }

}