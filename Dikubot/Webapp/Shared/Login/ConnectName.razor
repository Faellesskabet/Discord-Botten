@using global::Discord.WebSocket
@using Dikubot.DataLayer.Static
@using Dikubot.DataLayer.Database.Global.GuildSettings
@using Dikubot.Webapp.Authentication
@using Dikubot.Webapp.Authentication.Identities
@using Dikubot.DataLayer.Database.Global.User.DiscordUser
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject DiscordSocketClient DiscordSocketClient
@inject DiscordUserGlobalMongoService DiscordUserGlobalMongoService
@inject GuildSettingsMongoService GuildSettingsMongoService

<MudCard>
    <MudCardHeader>
        <MudText Typo="Typo.h6">
            <Localization>
                <Danish>Hvad er dit fulde navn?</Danish>
                <English>What is your full name?</English>
            </Localization>
        </MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudTextField Placeholder="Fulde navn"
                      @bind-Value="_name" Immediate="@true" Autofocus="@true"/>
    </MudCardContent>
    <MudCardActions>
        <MudButton OnClick="@ConfirmName">
            <Localization>
                <Danish>Bekr√¶ft Navn</Danish>
                <English>Confirm Name</English>
            </Localization>
        </MudButton>
        <MudButton Link="/Logout" Color="Color.Error">Logud</MudButton>
    </MudCardActions>
</MudCard>


@code {

    [Parameter]
    public Login Parent { get; set; }

    private Authenticator _authenticator;
    private DiscordIdentity _discord;
    private string _name = "";

    protected override async Task OnInitializedAsync()
    {
        _authenticator = (Authenticator)AuthenticationStateProvider;
        AuthenticationState authState = await _authenticator.GetAuthenticationStateAsync();
        _discord = (DiscordIdentity)authState.User.Identity;
    }

    private async void ConfirmName()
    {
        _discord.DiscordUserGlobalModel.Name = _name;
        DiscordUserGlobalMongoService.Upsert(_discord.DiscordUserGlobalModel);
        Util.UpdateUserNameOnAllForcedGuilds(DiscordSocketClient.GetUser(_discord.DiscordUserGlobalModel.DiscordIdLong), GuildSettingsMongoService, DiscordUserGlobalMongoService);
        await _authenticator.UpdateSession();
        Parent.Update();
    }

}