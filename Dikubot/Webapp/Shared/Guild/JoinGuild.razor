@using Dikubot.DataLayer.Database.Global.User
@using Dikubot.Discord
@using Dikubot.Webapp.Authentication
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject UserService _user;
@inject UserGlobalMongoService UserGlobalMongoService

@if (IsMember)
{
    <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="@GotoGuild">Go to Community</MudButton>
}
else
{
    <MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="@Join">Join Community</MudButton>
}

@code {

    [Parameter]
    public ulong GuildID { get; set; }

    [Inject]
    private IDialogService DialogService { get; set; }

    public bool IsMember => DiscordBot.ClientStatic.GetUser(_user.GetUserGlobalModel().DiscordIdLong)?.MutualGuilds.Any(guild => guild.Id == GuildID) ?? false;

    private async Task GotoGuild()
    {
        if (_user == null)
        {
            await DialogService.ShowMessageBox("Fejl ???", "Der er sket en fejl. Prøv at clear dine cookies og refresh");
            return;
        }

        UserGlobalModel userGlobalModel = _user.GetUserGlobalModel();
        userGlobalModel.SelectedGuild = GuildID;
        UserGlobalMongoService.Upsert(userGlobalModel);
        await ((Authenticator)AuthenticationStateProvider).UpdateSession();


        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }

    private async Task Join()
    {
        UserGlobalModel userModel = await ((Authenticator)AuthenticationStateProvider).GetUserGlobal();
        if (userModel == null)
        {
            await DialogService.ShowMessageBox("Fejl ???", "Der er sket en fejl. Prøv at clear dine cookies og refresh");
            return;
        }


        bool? result = await DialogService.ShowMessageBox(
            "Bekræft",
            "Du er ved at join et nyt fællesskab. Er du sikker?",
            "Join", cancelText: "Fortryd");

        if (!result.GetValueOrDefault())
        {
            return;
        }

        try
        {
            string accessToken = await _user.GetTokenAsync();
            await DiscordBot.ClientStatic.GetGuild(GuildID).AddGuildUserAsync(userModel.DiscordIdLong, accessToken);
        }
        catch (Exception e)
        {
            await DialogService.ShowMessageBox("Fejl ???", "Der er sket en fejl. Prøv at clear dine cookies og refresh");
            return;
        }
        await GotoGuild();
    }

}