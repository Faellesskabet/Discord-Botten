@using Dikubot.DataLayer.Database.Global.GuildSettings
@using Dikubot.DataLayer.Database.Global.Session
@using Dikubot.DataLayer.Database.Global.User
@using Dikubot.DataLayer.Static
@using Dikubot.Discord
@using Dikubot.Webapp.Authentication
@using Microsoft.AspNetCore.Http
@using Microsoft.IdentityModel.Tokens
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor httpContextAccessor;
@inject UserService _userService
@using Syncfusion.Blazor.Buttons
@using Data.Discord

<MudCard Elevation="25" Style="min-width: 420px; max-width: 420px; max-height: 340px; min-height: 340px;">
        @if (!@Guild.BannerUrl.IsNullOrEmpty())
        {
            <MudCardMedia Image="@Guild.BannerUrl" Style="object-fit: cover; height: 60px; min-height: 60px; width: 100%;"/>
        }
        else
        {
            <MudCardMedia Image="../images/placeholder-banner.png" Style="object-fit: cover; height: 60px; min-height: 60px; width: 100%;"/>
        }
        <div style="min-height: 28px; max-height: 28px;" class="d-flex justify-start flex-wrap">
            @foreach (var tag in Guild.GetTags())
            {
                    //Kan ikke gøres direkte :(
                string style = $"background-color: " + @tag.Color + ";" + "color: " + @tag.TextColor + ";";
                <MudChip Style="@style" Size="Size.Small"> @tag.Name</MudChip>
            }
        </div>
        <MudCardHeader>
        <CardHeaderAvatar>
            <MudAvatar Image="@Guild.LogoUrl"></MudAvatar>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo="Typo.body1">@Guild.Name</MudText>
            <MudText Typo="Typo.body2">@DiscordBot.ClientStatic.GetGuild(Guild.GuildId).MemberCount Medlemmere</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent Style="max-height: 27%; min-height: 27%; overflow: scroll;">
        <MudText>@Guild.Description</MudText>
    </MudCardContent>
    <MudCardActions>
        @if (GuildWidgetDto.IsUserMember)
        {
            <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="@GotoGuild">Gå til side</MudButton>
        }
        else
        {
            <MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="@JoinGuild">Join fællesskab</MudButton>
        }
    </MudCardActions>
</MudCard>


@code {
    [Inject] private IDialogService DialogService { get; set; }
    [Parameter] public GuildWidgetDto GuildWidgetDto { get; set; }
    
    public GuildSettingsModel Guild{get => GuildWidgetDto.GuildSettingsModel;}

    private async Task GotoGuild()
    {
        var authenticator = ((Authenticator) AuthenticationStateProvider);
        var authState = await authenticator.GetAuthenticationStateAsync();
        UserIdentity user = (UserIdentity) authState.User.Identity;
        UserGlobalModel userModel = user?.UserGlobalModel;

        if (userModel == null)
        {
            await DialogService.ShowMessageBox( "Fejl ???", "Der er sket en fejl. Prøv at clear dine cookies og refresh");
            return;
        }

        userModel.SelectedGuild = Guild.GuildId;
        new UserGlobalServices().Upsert(user.UserGlobalModel);
        await authenticator.UpdateSession();
        NavigationManager.NavigateTo("/");
        
    }
    
    private async Task JoinGuild()
    {
        UserGlobalModel userModel = await ((Authenticator) AuthenticationStateProvider).GetUserGlobal();
        if (userModel == null)
        {
            await DialogService.ShowMessageBox( "Fejl ???", "Der er sket en fejl. Prøv at clear dine cookies og refresh");
            return;
        }
        
        
        bool? result = await DialogService.ShowMessageBox(
            "Bekræft", 
            "Du er ved at join et nyt fællesskab. Er du sikker?", 
            yesText:"Join", cancelText:"Fortryd");

        if (!result.GetValueOrDefault())
        {
            return;
        }
        
        try
        {
            string accessToken = await _userService.GetTokenAsync();
            await DiscordBot.ClientStatic.GetGuild(Guild.GuildId).AddGuildUserAsync(userModel.DiscordIdLong, accessToken);
        }
        catch (Exception e)
        {
            await DialogService.ShowMessageBox( "Fejl ???", "Der er sket en fejl. Prøv at clear dine cookies og refresh");
            return;
        }
        await GotoGuild();
    }
}