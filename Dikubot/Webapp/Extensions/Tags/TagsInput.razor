@using Dikubot.DataLayer.Static
@using Dikubot.DataLayer.Database.Global.Settings.Tags
@namespace Dikubot.DataLayer.Database.Global.Settings.Tags

                        <MudSelect MultiSelection="true" 
                                   Label="Tags" 
                                   HelperText="Gør det lettere at finde"
                                   @bind-SelectedValues="Value"
                                   MultiSelectionTextFunc="list => GetTagsString()" Text="@GetTagsString()"
                                   OnClose="OnValueChanged">
                            @foreach (var tag in Tags)
                            {
                                <MudSelectItem Value="tag.Id" >@tag.Name - @tag.Decs</MudSelectItem>
                            }
                        </MudSelect>


@code {
    [Parameter]
    public  IEnumerable<Guid> Value { get; set; }

    [Parameter]
    public EventCallback<IEnumerable<Guid>> ValueChanged { get; set; }
    
    [Parameter]
    public TagsMainModel.enumTagType TagType { get; set; } = TagsMainModel.enumTagType.tag;
    
    private List<TagsMainModel> Tags => _tagServices.GetAll().Where(t => t.TagType == TagType).ToList();
    
    private readonly TagServices _tagServices = new TagServices();
    

    private async Task OnValueChanged()
    {
        await ValueChanged.InvokeAsync(Value);
    }

    public List<TagsMainModel> GetTags()
    {
        return Value.Select(t => _tagServices.Get(t))
            .ToList();
    }
    
    private string GetTagsString()
    {
        return Util.ConcatListToString(GetTags().Select(tag => tag?.Name ?? "").ToList());
    }
    
    
    
}